spring.datasource.url=${DB_URL:jdbc:postgresql://localhost:5433/zupmicroservices}
spring.datasource.username=proposta
spring.datasource.password=password
spring.datasource.driver-class-name=org.postgresql.Driver


spring.jpa.show-sql=true
spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImproveNamingStrategy
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQL95Dialect
spring.jpa.generate-ddl=true

feign.client.config.status.read-timeout=100

tempo.espera.thread=${THREAD_WAIT:500000}

keycloak.realm = proposta
keycloak.auth-server-url = http://127.0.0.1:18085/auth/realms/proposta/
keycloak.ssl-required = external
keycloak.resource = proposta
keycloak.credentials.secret = c7e8c33c-ed13-4ea6-bf8d-eb609abdd099
keycloak.use-resource-role-mappings = true
keycloak.enabled = true

keycloak.securityConstraints[0].authRoles[0] = admin
keycloak.securityConstraints[0].authRoles[1] = user
keycloak.securityConstraints[0].securityCollections[0].name = proposta
keycloak.securityConstraints[0].securityCollections[0].patterns[0] = /api/proposta/**

## spring security resource server configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:18085/auth/realms/proposta}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWKS_URI:http://localhost:18085/auth/realms/proposta/protocol/openid-connect/certs}